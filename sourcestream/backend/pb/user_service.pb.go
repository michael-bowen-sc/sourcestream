// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/user_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common types
type Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // active, pending, approved, archived
	LastActivity  string                 `protobuf:"bytes,5,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	Url           string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	License       string                 `protobuf:"bytes,7,opt,name=license,proto3" json:"license,omitempty"`
	OwnerId       string                 `protobuf:"bytes,8,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_proto_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Project) GetLastActivity() string {
	if x != nil {
		return x.LastActivity
	}
	return ""
}

func (x *Project) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Project) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Project) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type User struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CorporateId    string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	GithubUsername string                 `protobuf:"bytes,2,opt,name=github_username,json=githubUsername,proto3" json:"github_username,omitempty"`
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Department     string                 `protobuf:"bytes,4,opt,name=department,proto3" json:"department,omitempty"`
	Email          string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Role           string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"` // user, ospo_admin, admin
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_proto_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

func (x *User) GetGithubUsername() string {
	if x != nil {
		return x.GithubUsername
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // project, pullrequest, access
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // pending, approved, rejected
	RequesterId   string                 `protobuf:"bytes,6,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ProjectName   string                 `protobuf:"bytes,8,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	ProjectUrl    string                 `protobuf:"bytes,9,opt,name=project_url,json=projectUrl,proto3" json:"project_url,omitempty"`
	License       string                 `protobuf:"bytes,10,opt,name=license,proto3" json:"license,omitempty"`
	Role          string                 `protobuf:"bytes,11,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_proto_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Request) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Request) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Request) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Request) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Request) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

func (x *Request) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Request) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *Request) GetProjectUrl() string {
	if x != nil {
		return x.ProjectUrl
	}
	return ""
}

func (x *Request) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Request) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// User Service Messages
type RegisterContributorRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CorporateId    string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	GithubUsername string                 `protobuf:"bytes,2,opt,name=github_username,json=githubUsername,proto3" json:"github_username,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterContributorRequest) Reset() {
	*x = RegisterContributorRequest{}
	mi := &file_proto_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterContributorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterContributorRequest) ProtoMessage() {}

func (x *RegisterContributorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterContributorRequest.ProtoReflect.Descriptor instead.
func (*RegisterContributorRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterContributorRequest) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

func (x *RegisterContributorRequest) GetGithubUsername() string {
	if x != nil {
		return x.GithubUsername
	}
	return ""
}

type RegisterContributorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterContributorResponse) Reset() {
	*x = RegisterContributorResponse{}
	mi := &file_proto_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterContributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterContributorResponse) ProtoMessage() {}

func (x *RegisterContributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterContributorResponse.ProtoReflect.Descriptor instead.
func (*RegisterContributorResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterContributorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetContributorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorporateId   string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContributorRequest) Reset() {
	*x = GetContributorRequest{}
	mi := &file_proto_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContributorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributorRequest) ProtoMessage() {}

func (x *GetContributorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributorRequest.ProtoReflect.Descriptor instead.
func (*GetContributorRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetContributorRequest) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

type GetContributorResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CorporateId      string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	GithubUsername   string                 `protobuf:"bytes,2,opt,name=github_username,json=githubUsername,proto3" json:"github_username,omitempty"`
	ApprovedProjects []string               `protobuf:"bytes,3,rep,name=approved_projects,json=approvedProjects,proto3" json:"approved_projects,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetContributorResponse) Reset() {
	*x = GetContributorResponse{}
	mi := &file_proto_user_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributorResponse) ProtoMessage() {}

func (x *GetContributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributorResponse.ProtoReflect.Descriptor instead.
func (*GetContributorResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetContributorResponse) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

func (x *GetContributorResponse) GetGithubUsername() string {
	if x != nil {
		return x.GithubUsername
	}
	return ""
}

func (x *GetContributorResponse) GetApprovedProjects() []string {
	if x != nil {
		return x.ApprovedProjects
	}
	return nil
}

type GetUserProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorporateId   string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfileRequest) Reset() {
	*x = GetUserProfileRequest{}
	mi := &file_proto_user_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileRequest) ProtoMessage() {}

func (x *GetUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileRequest.ProtoReflect.Descriptor instead.
func (*GetUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserProfileRequest) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

type GetUserProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfileResponse) Reset() {
	*x = GetUserProfileResponse{}
	mi := &file_proto_user_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileResponse) ProtoMessage() {}

func (x *GetUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileResponse.ProtoReflect.Descriptor instead.
func (*GetUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserProfileResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Project Service Messages
type GetAuthoredProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthoredProjectsRequest) Reset() {
	*x = GetAuthoredProjectsRequest{}
	mi := &file_proto_user_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthoredProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthoredProjectsRequest) ProtoMessage() {}

func (x *GetAuthoredProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthoredProjectsRequest.ProtoReflect.Descriptor instead.
func (*GetAuthoredProjectsRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetAuthoredProjectsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAuthoredProjectsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAuthoredProjectsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAuthoredProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*Project             `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthoredProjectsResponse) Reset() {
	*x = GetAuthoredProjectsResponse{}
	mi := &file_proto_user_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthoredProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthoredProjectsResponse) ProtoMessage() {}

func (x *GetAuthoredProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthoredProjectsResponse.ProtoReflect.Descriptor instead.
func (*GetAuthoredProjectsResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetAuthoredProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetAuthoredProjectsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetContributedProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContributedProjectsRequest) Reset() {
	*x = GetContributedProjectsRequest{}
	mi := &file_proto_user_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContributedProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributedProjectsRequest) ProtoMessage() {}

func (x *GetContributedProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributedProjectsRequest.ProtoReflect.Descriptor instead.
func (*GetContributedProjectsRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetContributedProjectsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetContributedProjectsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetContributedProjectsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetContributedProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*Project             `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContributedProjectsResponse) Reset() {
	*x = GetContributedProjectsResponse{}
	mi := &file_proto_user_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContributedProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributedProjectsResponse) ProtoMessage() {}

func (x *GetContributedProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributedProjectsResponse.ProtoReflect.Descriptor instead.
func (*GetContributedProjectsResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetContributedProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetContributedProjectsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetApprovedProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApprovedProjectsRequest) Reset() {
	*x = GetApprovedProjectsRequest{}
	mi := &file_proto_user_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApprovedProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApprovedProjectsRequest) ProtoMessage() {}

func (x *GetApprovedProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApprovedProjectsRequest.ProtoReflect.Descriptor instead.
func (*GetApprovedProjectsRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetApprovedProjectsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetApprovedProjectsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetApprovedProjectsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetApprovedProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*Project             `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApprovedProjectsResponse) Reset() {
	*x = GetApprovedProjectsResponse{}
	mi := &file_proto_user_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApprovedProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApprovedProjectsResponse) ProtoMessage() {}

func (x *GetApprovedProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApprovedProjectsResponse.ProtoReflect.Descriptor instead.
func (*GetApprovedProjectsResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetApprovedProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetApprovedProjectsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	License       string                 `protobuf:"bytes,4,opt,name=license,proto3" json:"license,omitempty"`
	OwnerId       string                 `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	mi := &file_proto_user_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateProjectRequest) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *CreateProjectRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	mi := &file_proto_user_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{16}
}

func (x *CreateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *CreateProjectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request Service Messages
type SubmitProjectRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ProjectUrl    string                 `protobuf:"bytes,3,opt,name=project_url,json=projectUrl,proto3" json:"project_url,omitempty"`
	License       string                 `protobuf:"bytes,4,opt,name=license,proto3" json:"license,omitempty"`
	RequesterId   string                 `protobuf:"bytes,5,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitProjectRequestRequest) Reset() {
	*x = SubmitProjectRequestRequest{}
	mi := &file_proto_user_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitProjectRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitProjectRequestRequest) ProtoMessage() {}

func (x *SubmitProjectRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitProjectRequestRequest.ProtoReflect.Descriptor instead.
func (*SubmitProjectRequestRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{17}
}

func (x *SubmitProjectRequestRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubmitProjectRequestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubmitProjectRequestRequest) GetProjectUrl() string {
	if x != nil {
		return x.ProjectUrl
	}
	return ""
}

func (x *SubmitProjectRequestRequest) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *SubmitProjectRequestRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type SubmitProjectRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitProjectRequestResponse) Reset() {
	*x = SubmitProjectRequestResponse{}
	mi := &file_proto_user_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitProjectRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitProjectRequestResponse) ProtoMessage() {}

func (x *SubmitProjectRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitProjectRequestResponse.ProtoReflect.Descriptor instead.
func (*SubmitProjectRequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{18}
}

func (x *SubmitProjectRequestResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SubmitProjectRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubmitPullRequestApprovalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ProjectName   string                 `protobuf:"bytes,3,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	PrUrl         string                 `protobuf:"bytes,4,opt,name=pr_url,json=prUrl,proto3" json:"pr_url,omitempty"`
	RequesterId   string                 `protobuf:"bytes,5,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitPullRequestApprovalRequest) Reset() {
	*x = SubmitPullRequestApprovalRequest{}
	mi := &file_proto_user_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitPullRequestApprovalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitPullRequestApprovalRequest) ProtoMessage() {}

func (x *SubmitPullRequestApprovalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitPullRequestApprovalRequest.ProtoReflect.Descriptor instead.
func (*SubmitPullRequestApprovalRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{19}
}

func (x *SubmitPullRequestApprovalRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubmitPullRequestApprovalRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubmitPullRequestApprovalRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *SubmitPullRequestApprovalRequest) GetPrUrl() string {
	if x != nil {
		return x.PrUrl
	}
	return ""
}

func (x *SubmitPullRequestApprovalRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type SubmitPullRequestApprovalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitPullRequestApprovalResponse) Reset() {
	*x = SubmitPullRequestApprovalResponse{}
	mi := &file_proto_user_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitPullRequestApprovalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitPullRequestApprovalResponse) ProtoMessage() {}

func (x *SubmitPullRequestApprovalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitPullRequestApprovalResponse.ProtoReflect.Descriptor instead.
func (*SubmitPullRequestApprovalResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{20}
}

func (x *SubmitPullRequestApprovalResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SubmitPullRequestApprovalResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubmitAccessRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ProjectName   string                 `protobuf:"bytes,3,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Role          string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	RequesterId   string                 `protobuf:"bytes,5,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitAccessRequestRequest) Reset() {
	*x = SubmitAccessRequestRequest{}
	mi := &file_proto_user_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitAccessRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAccessRequestRequest) ProtoMessage() {}

func (x *SubmitAccessRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAccessRequestRequest.ProtoReflect.Descriptor instead.
func (*SubmitAccessRequestRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{21}
}

func (x *SubmitAccessRequestRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubmitAccessRequestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubmitAccessRequestRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *SubmitAccessRequestRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SubmitAccessRequestRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type SubmitAccessRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitAccessRequestResponse) Reset() {
	*x = SubmitAccessRequestResponse{}
	mi := &file_proto_user_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitAccessRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAccessRequestResponse) ProtoMessage() {}

func (x *SubmitAccessRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAccessRequestResponse.ProtoReflect.Descriptor instead.
func (*SubmitAccessRequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{22}
}

func (x *SubmitAccessRequestResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SubmitAccessRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // optional filter
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequestsRequest) Reset() {
	*x = GetRequestsRequest{}
	mi := &file_proto_user_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestsRequest) ProtoMessage() {}

func (x *GetRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetRequestsRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetRequestsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRequestsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetRequestsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRequestsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*Request             `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequestsResponse) Reset() {
	*x = GetRequestsResponse{}
	mi := &file_proto_user_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestsResponse) ProtoMessage() {}

func (x *GetRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetRequestsResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetRequestsResponse) GetRequests() []*Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *GetRequestsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_user_service_proto protoreflect.FileDescriptor

const file_proto_user_service_proto_rawDesc = "" +
	"\n" +
	"\x18proto/user_service.proto\x12\abackend\"\xd3\x01\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12#\n" +
	"\rlast_activity\x18\x05 \x01(\tR\flastActivity\x12\x10\n" +
	"\x03url\x18\x06 \x01(\tR\x03url\x12\x18\n" +
	"\alicense\x18\a \x01(\tR\alicense\x12\x19\n" +
	"\bowner_id\x18\b \x01(\tR\aownerId\"\xb0\x01\n" +
	"\x04User\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\x12'\n" +
	"\x0fgithub_username\x18\x02 \x01(\tR\x0egithubUsername\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"department\x18\x04 \x01(\tR\n" +
	"department\x12\x14\n" +
	"\x05email\x18\x05 \x01(\tR\x05email\x12\x12\n" +
	"\x04role\x18\x06 \x01(\tR\x04role\"\xb1\x02\n" +
	"\aRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12!\n" +
	"\frequester_id\x18\x06 \x01(\tR\vrequesterId\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12!\n" +
	"\fproject_name\x18\b \x01(\tR\vprojectName\x12\x1f\n" +
	"\vproject_url\x18\t \x01(\tR\n" +
	"projectUrl\x12\x18\n" +
	"\alicense\x18\n" +
	" \x01(\tR\alicense\x12\x12\n" +
	"\x04role\x18\v \x01(\tR\x04role\"h\n" +
	"\x1aRegisterContributorRequest\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\x12'\n" +
	"\x0fgithub_username\x18\x02 \x01(\tR\x0egithubUsername\"7\n" +
	"\x1bRegisterContributorResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\":\n" +
	"\x15GetContributorRequest\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\"\x91\x01\n" +
	"\x16GetContributorResponse\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\x12'\n" +
	"\x0fgithub_username\x18\x02 \x01(\tR\x0egithubUsername\x12+\n" +
	"\x11approved_projects\x18\x03 \x03(\tR\x10approvedProjects\":\n" +
	"\x15GetUserProfileRequest\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\";\n" +
	"\x16GetUserProfileResponse\x12!\n" +
	"\x04user\x18\x01 \x01(\v2\r.backend.UserR\x04user\"_\n" +
	"\x1aGetAuthoredProjectsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"a\n" +
	"\x1bGetAuthoredProjectsResponse\x12,\n" +
	"\bprojects\x18\x01 \x03(\v2\x10.backend.ProjectR\bprojects\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"b\n" +
	"\x1dGetContributedProjectsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"d\n" +
	"\x1eGetContributedProjectsResponse\x12,\n" +
	"\bprojects\x18\x01 \x03(\v2\x10.backend.ProjectR\bprojects\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"_\n" +
	"\x1aGetApprovedProjectsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"a\n" +
	"\x1bGetApprovedProjectsResponse\x12,\n" +
	"\bprojects\x18\x01 \x03(\v2\x10.backend.ProjectR\bprojects\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\x93\x01\n" +
	"\x14CreateProjectRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x18\n" +
	"\alicense\x18\x04 \x01(\tR\alicense\x12\x19\n" +
	"\bowner_id\x18\x05 \x01(\tR\aownerId\"]\n" +
	"\x15CreateProjectResponse\x12*\n" +
	"\aproject\x18\x01 \x01(\v2\x10.backend.ProjectR\aproject\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xb3\x01\n" +
	"\x1bSubmitProjectRequestRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1f\n" +
	"\vproject_url\x18\x03 \x01(\tR\n" +
	"projectUrl\x12\x18\n" +
	"\alicense\x18\x04 \x01(\tR\alicense\x12!\n" +
	"\frequester_id\x18\x05 \x01(\tR\vrequesterId\"W\n" +
	"\x1cSubmitProjectRequestResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xb7\x01\n" +
	" SubmitPullRequestApprovalRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12!\n" +
	"\fproject_name\x18\x03 \x01(\tR\vprojectName\x12\x15\n" +
	"\x06pr_url\x18\x04 \x01(\tR\x05prUrl\x12!\n" +
	"\frequester_id\x18\x05 \x01(\tR\vrequesterId\"\\\n" +
	"!SubmitPullRequestApprovalResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xae\x01\n" +
	"\x1aSubmitAccessRequestRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12!\n" +
	"\fproject_name\x18\x03 \x01(\tR\vprojectName\x12\x12\n" +
	"\x04role\x18\x04 \x01(\tR\x04role\x12!\n" +
	"\frequester_id\x18\x05 \x01(\tR\vrequesterId\"V\n" +
	"\x1bSubmitAccessRequestResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"o\n" +
	"\x12GetRequestsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"Y\n" +
	"\x13GetRequestsResponse\x12,\n" +
	"\brequests\x18\x01 \x03(\v2\x10.backend.RequestR\brequests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total2\x95\x02\n" +
	"\vUserService\x12`\n" +
	"\x13RegisterContributor\x12#.backend.RegisterContributorRequest\x1a$.backend.RegisterContributorResponse\x12Q\n" +
	"\x0eGetContributor\x12\x1e.backend.GetContributorRequest\x1a\x1f.backend.GetContributorResponse\x12Q\n" +
	"\x0eGetUserProfile\x12\x1e.backend.GetUserProfileRequest\x1a\x1f.backend.GetUserProfileResponse2\x8f\x03\n" +
	"\x0eProjectService\x12`\n" +
	"\x13GetAuthoredProjects\x12#.backend.GetAuthoredProjectsRequest\x1a$.backend.GetAuthoredProjectsResponse\x12i\n" +
	"\x16GetContributedProjects\x12&.backend.GetContributedProjectsRequest\x1a'.backend.GetContributedProjectsResponse\x12`\n" +
	"\x13GetApprovedProjects\x12#.backend.GetApprovedProjectsRequest\x1a$.backend.GetApprovedProjectsResponse\x12N\n" +
	"\rCreateProject\x12\x1d.backend.CreateProjectRequest\x1a\x1e.backend.CreateProjectResponse2\x95\x03\n" +
	"\x0eRequestService\x12c\n" +
	"\x14SubmitProjectRequest\x12$.backend.SubmitProjectRequestRequest\x1a%.backend.SubmitProjectRequestResponse\x12r\n" +
	"\x19SubmitPullRequestApproval\x12).backend.SubmitPullRequestApprovalRequest\x1a*.backend.SubmitPullRequestApprovalResponse\x12`\n" +
	"\x13SubmitAccessRequest\x12#.backend.SubmitAccessRequestRequest\x1a$.backend.SubmitAccessRequestResponse\x12H\n" +
	"\vGetRequests\x12\x1b.backend.GetRequestsRequest\x1a\x1c.backend.GetRequestsResponseB\x19Z\x17sourcestream/backend/pbb\x06proto3"

var (
	file_proto_user_service_proto_rawDescOnce sync.Once
	file_proto_user_service_proto_rawDescData []byte
)

func file_proto_user_service_proto_rawDescGZIP() []byte {
	file_proto_user_service_proto_rawDescOnce.Do(func() {
		file_proto_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_user_service_proto_rawDesc), len(file_proto_user_service_proto_rawDesc)))
	})
	return file_proto_user_service_proto_rawDescData
}

var file_proto_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_user_service_proto_goTypes = []any{
	(*Project)(nil),                           // 0: backend.Project
	(*User)(nil),                              // 1: backend.User
	(*Request)(nil),                           // 2: backend.Request
	(*RegisterContributorRequest)(nil),        // 3: backend.RegisterContributorRequest
	(*RegisterContributorResponse)(nil),       // 4: backend.RegisterContributorResponse
	(*GetContributorRequest)(nil),             // 5: backend.GetContributorRequest
	(*GetContributorResponse)(nil),            // 6: backend.GetContributorResponse
	(*GetUserProfileRequest)(nil),             // 7: backend.GetUserProfileRequest
	(*GetUserProfileResponse)(nil),            // 8: backend.GetUserProfileResponse
	(*GetAuthoredProjectsRequest)(nil),        // 9: backend.GetAuthoredProjectsRequest
	(*GetAuthoredProjectsResponse)(nil),       // 10: backend.GetAuthoredProjectsResponse
	(*GetContributedProjectsRequest)(nil),     // 11: backend.GetContributedProjectsRequest
	(*GetContributedProjectsResponse)(nil),    // 12: backend.GetContributedProjectsResponse
	(*GetApprovedProjectsRequest)(nil),        // 13: backend.GetApprovedProjectsRequest
	(*GetApprovedProjectsResponse)(nil),       // 14: backend.GetApprovedProjectsResponse
	(*CreateProjectRequest)(nil),              // 15: backend.CreateProjectRequest
	(*CreateProjectResponse)(nil),             // 16: backend.CreateProjectResponse
	(*SubmitProjectRequestRequest)(nil),       // 17: backend.SubmitProjectRequestRequest
	(*SubmitProjectRequestResponse)(nil),      // 18: backend.SubmitProjectRequestResponse
	(*SubmitPullRequestApprovalRequest)(nil),  // 19: backend.SubmitPullRequestApprovalRequest
	(*SubmitPullRequestApprovalResponse)(nil), // 20: backend.SubmitPullRequestApprovalResponse
	(*SubmitAccessRequestRequest)(nil),        // 21: backend.SubmitAccessRequestRequest
	(*SubmitAccessRequestResponse)(nil),       // 22: backend.SubmitAccessRequestResponse
	(*GetRequestsRequest)(nil),                // 23: backend.GetRequestsRequest
	(*GetRequestsResponse)(nil),               // 24: backend.GetRequestsResponse
}
var file_proto_user_service_proto_depIdxs = []int32{
	1,  // 0: backend.GetUserProfileResponse.user:type_name -> backend.User
	0,  // 1: backend.GetAuthoredProjectsResponse.projects:type_name -> backend.Project
	0,  // 2: backend.GetContributedProjectsResponse.projects:type_name -> backend.Project
	0,  // 3: backend.GetApprovedProjectsResponse.projects:type_name -> backend.Project
	0,  // 4: backend.CreateProjectResponse.project:type_name -> backend.Project
	2,  // 5: backend.GetRequestsResponse.requests:type_name -> backend.Request
	3,  // 6: backend.UserService.RegisterContributor:input_type -> backend.RegisterContributorRequest
	5,  // 7: backend.UserService.GetContributor:input_type -> backend.GetContributorRequest
	7,  // 8: backend.UserService.GetUserProfile:input_type -> backend.GetUserProfileRequest
	9,  // 9: backend.ProjectService.GetAuthoredProjects:input_type -> backend.GetAuthoredProjectsRequest
	11, // 10: backend.ProjectService.GetContributedProjects:input_type -> backend.GetContributedProjectsRequest
	13, // 11: backend.ProjectService.GetApprovedProjects:input_type -> backend.GetApprovedProjectsRequest
	15, // 12: backend.ProjectService.CreateProject:input_type -> backend.CreateProjectRequest
	17, // 13: backend.RequestService.SubmitProjectRequest:input_type -> backend.SubmitProjectRequestRequest
	19, // 14: backend.RequestService.SubmitPullRequestApproval:input_type -> backend.SubmitPullRequestApprovalRequest
	21, // 15: backend.RequestService.SubmitAccessRequest:input_type -> backend.SubmitAccessRequestRequest
	23, // 16: backend.RequestService.GetRequests:input_type -> backend.GetRequestsRequest
	4,  // 17: backend.UserService.RegisterContributor:output_type -> backend.RegisterContributorResponse
	6,  // 18: backend.UserService.GetContributor:output_type -> backend.GetContributorResponse
	8,  // 19: backend.UserService.GetUserProfile:output_type -> backend.GetUserProfileResponse
	10, // 20: backend.ProjectService.GetAuthoredProjects:output_type -> backend.GetAuthoredProjectsResponse
	12, // 21: backend.ProjectService.GetContributedProjects:output_type -> backend.GetContributedProjectsResponse
	14, // 22: backend.ProjectService.GetApprovedProjects:output_type -> backend.GetApprovedProjectsResponse
	16, // 23: backend.ProjectService.CreateProject:output_type -> backend.CreateProjectResponse
	18, // 24: backend.RequestService.SubmitProjectRequest:output_type -> backend.SubmitProjectRequestResponse
	20, // 25: backend.RequestService.SubmitPullRequestApproval:output_type -> backend.SubmitPullRequestApprovalResponse
	22, // 26: backend.RequestService.SubmitAccessRequest:output_type -> backend.SubmitAccessRequestResponse
	24, // 27: backend.RequestService.GetRequests:output_type -> backend.GetRequestsResponse
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_user_service_proto_init() }
func file_proto_user_service_proto_init() {
	if File_proto_user_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_user_service_proto_rawDesc), len(file_proto_user_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_user_service_proto_goTypes,
		DependencyIndexes: file_proto_user_service_proto_depIdxs,
		MessageInfos:      file_proto_user_service_proto_msgTypes,
	}.Build()
	File_proto_user_service_proto = out.File
	file_proto_user_service_proto_goTypes = nil
	file_proto_user_service_proto_depIdxs = nil
}
