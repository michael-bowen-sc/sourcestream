// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/user_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterContributorRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CorporateId    string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	GithubUsername string                 `protobuf:"bytes,2,opt,name=github_username,json=githubUsername,proto3" json:"github_username,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterContributorRequest) Reset() {
	*x = RegisterContributorRequest{}
	mi := &file_proto_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterContributorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterContributorRequest) ProtoMessage() {}

func (x *RegisterContributorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterContributorRequest.ProtoReflect.Descriptor instead.
func (*RegisterContributorRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterContributorRequest) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

func (x *RegisterContributorRequest) GetGithubUsername() string {
	if x != nil {
		return x.GithubUsername
	}
	return ""
}

type RegisterContributorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterContributorResponse) Reset() {
	*x = RegisterContributorResponse{}
	mi := &file_proto_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterContributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterContributorResponse) ProtoMessage() {}

func (x *RegisterContributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterContributorResponse.ProtoReflect.Descriptor instead.
func (*RegisterContributorResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterContributorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetContributorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorporateId   string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContributorRequest) Reset() {
	*x = GetContributorRequest{}
	mi := &file_proto_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContributorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributorRequest) ProtoMessage() {}

func (x *GetContributorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributorRequest.ProtoReflect.Descriptor instead.
func (*GetContributorRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetContributorRequest) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

type GetContributorResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CorporateId      string                 `protobuf:"bytes,1,opt,name=corporate_id,json=corporateId,proto3" json:"corporate_id,omitempty"`
	GithubUsername   string                 `protobuf:"bytes,2,opt,name=github_username,json=githubUsername,proto3" json:"github_username,omitempty"`
	ApprovedProjects []string               `protobuf:"bytes,3,rep,name=approved_projects,json=approvedProjects,proto3" json:"approved_projects,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetContributorResponse) Reset() {
	*x = GetContributorResponse{}
	mi := &file_proto_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributorResponse) ProtoMessage() {}

func (x *GetContributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributorResponse.ProtoReflect.Descriptor instead.
func (*GetContributorResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetContributorResponse) GetCorporateId() string {
	if x != nil {
		return x.CorporateId
	}
	return ""
}

func (x *GetContributorResponse) GetGithubUsername() string {
	if x != nil {
		return x.GithubUsername
	}
	return ""
}

func (x *GetContributorResponse) GetApprovedProjects() []string {
	if x != nil {
		return x.ApprovedProjects
	}
	return nil
}

var File_proto_user_service_proto protoreflect.FileDescriptor

const file_proto_user_service_proto_rawDesc = "" +
	"\n" +
	"\x18proto/user_service.proto\x12\abackend\"h\n" +
	"\x1aRegisterContributorRequest\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\x12'\n" +
	"\x0fgithub_username\x18\x02 \x01(\tR\x0egithubUsername\"7\n" +
	"\x1bRegisterContributorResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\":\n" +
	"\x15GetContributorRequest\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\"\x91\x01\n" +
	"\x16GetContributorResponse\x12!\n" +
	"\fcorporate_id\x18\x01 \x01(\tR\vcorporateId\x12'\n" +
	"\x0fgithub_username\x18\x02 \x01(\tR\x0egithubUsername\x12+\n" +
	"\x11approved_projects\x18\x03 \x03(\tR\x10approvedProjects2\xc2\x01\n" +
	"\vUserService\x12`\n" +
	"\x13RegisterContributor\x12#.backend.RegisterContributorRequest\x1a$.backend.RegisterContributorResponse\x12Q\n" +
	"\x0eGetContributor\x12\x1e.backend.GetContributorRequest\x1a\x1f.backend.GetContributorResponseB\x19Z\x17sourcestream/backend/pbb\x06proto3"

var (
	file_proto_user_service_proto_rawDescOnce sync.Once
	file_proto_user_service_proto_rawDescData []byte
)

func file_proto_user_service_proto_rawDescGZIP() []byte {
	file_proto_user_service_proto_rawDescOnce.Do(func() {
		file_proto_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_user_service_proto_rawDesc), len(file_proto_user_service_proto_rawDesc)))
	})
	return file_proto_user_service_proto_rawDescData
}

var file_proto_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_user_service_proto_goTypes = []any{
	(*RegisterContributorRequest)(nil),  // 0: backend.RegisterContributorRequest
	(*RegisterContributorResponse)(nil), // 1: backend.RegisterContributorResponse
	(*GetContributorRequest)(nil),       // 2: backend.GetContributorRequest
	(*GetContributorResponse)(nil),      // 3: backend.GetContributorResponse
}
var file_proto_user_service_proto_depIdxs = []int32{
	0, // 0: backend.UserService.RegisterContributor:input_type -> backend.RegisterContributorRequest
	2, // 1: backend.UserService.GetContributor:input_type -> backend.GetContributorRequest
	1, // 2: backend.UserService.RegisterContributor:output_type -> backend.RegisterContributorResponse
	3, // 3: backend.UserService.GetContributor:output_type -> backend.GetContributorResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_user_service_proto_init() }
func file_proto_user_service_proto_init() {
	if File_proto_user_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_user_service_proto_rawDesc), len(file_proto_user_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_service_proto_goTypes,
		DependencyIndexes: file_proto_user_service_proto_depIdxs,
		MessageInfos:      file_proto_user_service_proto_msgTypes,
	}.Build()
	File_proto_user_service_proto = out.File
	file_proto_user_service_proto_goTypes = nil
	file_proto_user_service_proto_depIdxs = nil
}
